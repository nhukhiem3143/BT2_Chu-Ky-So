# ==========================================
# tamper_pdf_overlay_unicode.py
# Th√™m ch·ªØ "Xin ch√†o" (c√≥ ti·∫øng Vi·ªát) v√†o trang ƒë·∫ßu c·ªßa signed.pdf
# m√† kh√¥ng ph√° ch·ªØ k√Ω.
# ==========================================

from reportlab.pdfgen import canvas
from reportlab.lib.pagesizes import A4
from reportlab.pdfbase import pdfmetrics
from reportlab.pdfbase.ttfonts import TTFont
from pikepdf import Pdf
from pathlib import Path

SIGNED_PDF = "../signed.pdf"
OVERLAY_PDF = "overlay.pdf"
TAMPERED_PDF = "../tampered.pdf"

# === 1. ƒêƒÉng k√Ω font Unicode ===
# (Ch·ªçn m·ªôt font c√≥ h·ªó tr·ª£ ti·∫øng Vi·ªát, v√≠ d·ª• Arial ho·∫∑c DejaVuSans)
FONT_PATH = Path("C:/Windows/Fonts/arial.ttf")  # ƒê∆∞·ªùng d·∫´n font h·ªá th·ªëng
pdfmetrics.registerFont(TTFont("ArialUnicode", str(FONT_PATH)))

# === 2. T·∫°o overlay c√≥ ch·ªØ "Xin ch√†o" ===
c = canvas.Canvas(OVERLAY_PDF, pagesize=A4)
c.setFont("ArialUnicode", 14)
c.setFillColorRGB(1, 0, 0)  # ƒë·ªè cho d·ªÖ th·∫•y
c.drawString(100, 580, "Xin ch√†o, ƒë√¢y l√† ph·∫ßn ƒë√£ th√™m v√†o!")
c.save()
print("‚úÖ ƒê√£ t·∫°o overlay.pdf")

# === 3. Gh√©p overlay v√†o signed.pdf (kh√¥ng ph√° ch·ªØ k√Ω) ===
base = Pdf.open(SIGNED_PDF)
overlay = Pdf.open(OVERLAY_PDF)

page = base.pages[0]
page.add_overlay(overlay.pages[0])

base.save(TAMPERED_PDF)
print(f"üíÄ ƒê√£ th√™m 'Xin ch√†o...' v√†o {TAMPERED_PDF}")
